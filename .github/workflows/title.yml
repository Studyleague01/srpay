name: Sync Channel Data

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-channel-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Fetch and process data
        run: |
          node - <<'EOF'
          const https = require('https');

          function httpsGet(url) {
              return new Promise((resolve, reject) => {
                  https.get(url, (res) => {
                      let data = '';
                      res.on('data', chunk => data += chunk);
                      res.on('end', () => {
                          try {
                              resolve(JSON.parse(data));
                          } catch (e) {
                              reject(e);
                          }
                      });
                  }).on('error', reject);
              });
          }

          async function fetchAllVideos() {
              const channelId = "UCPGNioeYrJq4nyAt-DVIHZg";
              const baseUrl = "https://invidious.nikkosphere.com/api/v1/channels";
              let allVideos = [];
              let page = 1;
              
              while (true) {
                  try {
                      console.log(`Fetching page ${page}...`);
                      const url = `${baseUrl}/${channelId}/videos?page=${page}&sort_by=newest`;
                      const data = await httpsGet(url);
                      
                      if (!data.videos || data.videos.length === 0) {
                          break;
                      }
                      
                      allVideos = allVideos.concat(data.videos);
                      page++;
                      
                      // Small delay between requests
                      await new Promise(resolve => setTimeout(resolve, 500));
                  } catch (error) {
                      console.error(`Error fetching page ${page}:`, error.message);
                      break;
                  }
              }
              
              return allVideos;
          }

          async function main() {
              try {
                  console.log('Fetching downloads.json...');
                  const downloads = await httpsGet(
                      'https://raw.githubusercontent.com/Studyleague01/srpay/main/downloads.json'
                  );

                  console.log('Fetching videos from Invidious...');
                  const videos = await fetchAllVideos();
                  console.log(`Found ${videos.length} total videos`);

                  // Filter and process videos
                  const processedVideos = videos
                      .filter(video => downloads[video.videoId])
                      .map(video => ({
                          videoId: video.videoId,
                          title: video.title,
                          description: video.description,
                          filePath: downloads[video.videoId].filePath,
                          published: video.published,
                          publishedText: video.publishedText,
                          viewCount: video.viewCount,
                          lengthSeconds: video.lengthSeconds,
                          liveNow: video.liveNow,
                          author: video.author,
                          authorId: video.authorId
                      }));

                  console.log(`Processed ${processedVideos.length} matching videos`);

                  // Save result
                  require('fs').writeFileSync(
                      'channel.json',
                      JSON.stringify({
                          totalVideos: processedVideos.length,
                          videos: processedVideos
                      }, null, 2)
                  );

              } catch (error) {
                  console.error('Error:', error);
                  process.exit(1);
              }
          }

          main();
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add channel.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update channel data" && git push)
