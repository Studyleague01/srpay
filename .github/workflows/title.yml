name: Sync Channel Data

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-channel-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Fetch and process data
        run: |
          node - <<'EOF'
          const https = require('https');

          function httpsGet(url) {
              return new Promise((resolve, reject) => {
                  https.get(url, (res) => {
                      let data = '';
                      res.on('data', (chunk) => data += chunk);
                      res.on('end', () => {
                          try {
                              resolve(JSON.parse(data));
                          } catch (e) {
                              reject(e);
                          }
                      });
                  }).on('error', reject);
              });
          }

          async function fetchAllVideos() {
              let nextpage = null;
              let allVideos = [];
              
              while (true) {
                  const baseUrl = 'https://cal1.piapi.ggtyler.dev/channel/UCPGNioeYrJq4nyAt-DVIHZg';
                  const url = nextpage ? `${baseUrl}?nextpage=${encodeURIComponent(nextpage)}` : baseUrl;
                  
                  console.log('Fetching:', url);
                  const data = await httpsGet(url);
                  
                  if (data.relatedStreams) {
                      allVideos = allVideos.concat(data.relatedStreams);
                  }
                  
                  nextpage = data.nextpage;
                  if (!nextpage) break;
                  
                  // Small delay to prevent rate limiting
                  await new Promise(resolve => setTimeout(resolve, 100));
              }
              
              return allVideos;
          }

          async function main() {
              try {
                  // Get existing downloads data
                  const downloads = await httpsGet(
                      'https://raw.githubusercontent.com/Studyleague01/srpay/main/downloads.json'
                  );

                  // Get all videos from channel with pagination
                  const videos = await fetchAllVideos();

                  // Process only the videos that exist in downloads.json and retain Piped's format
                  const processedVideos = videos.map(video => {
                      const videoId = video.url.split('=').pop();
                      if (downloads[videoId]) {
                          return {
                              ...video,
                              filePath: downloads[videoId].filePath
                          };
                      }
                      return null;
                  }).filter(v => v !== null);

                  const result = {
                      items: processedVideos
                  };

                  // Save result
                  require('fs').writeFileSync(
                      'channel.json',
                      JSON.stringify(result, null, 2)
                  );

                  console.log(`Processed ${processedVideos.length} videos`);
              } catch (error) {
                  console.error('Error:', error);
                  process.exit(1);
              }
          }

          main();
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add channel.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update channel data" && git push)
